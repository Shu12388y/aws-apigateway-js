service: restapi
frameworkVersion: "3"
plugins: 
  - serverless-offline

# custom header
custom:
  allowHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - X-Amz-Date
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
    - app_user_id
    - app_user_name

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: ap-south-1
  memorySize: 128
  timeOut: 5
  endpointType: regional
  environment:
    NOTES_TABLE: restapi-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:PustItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self.provider.environement.NOTES_TABLE}"      

functions:
  add-note:
    handler: api/addNote.handler
  get-note:
    handler: api/getNote.handler
  get-notes:
    handler: api/getNotes.handler
  delete-note:
    handler: api/deleteNote.handler
  update-note:
    handler: api/updateNote.handler


resources:
  Resources:
    NotesTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.NOTES_TABLE}
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
          - AttributeName: note_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: note_id-index
            KeySchema:
              - AttributeName: note_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
